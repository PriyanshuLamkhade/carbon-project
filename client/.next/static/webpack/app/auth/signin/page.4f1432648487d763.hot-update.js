"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/auth/signin/page",{

/***/ "(app-pages-browser)/./app/auth/signin/handleSignMessage.tsx":
/*!***********************************************!*\
  !*** ./app/auth/signin/handleSignMessage.tsx ***!
  \***********************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   HandleSignMessage: () => (/* binding */ HandleSignMessage)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var _solana_wallet_adapter_react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @solana/wallet-adapter-react */ \"(app-pages-browser)/./node_modules/@solana/wallet-adapter-react/lib/esm/useWallet.js\");\n/* harmony import */ var bs58__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! bs58 */ \"(app-pages-browser)/./node_modules/bs58/src/esm/index.js\");\n/* __next_internal_client_entry_do_not_use__ HandleSignMessage auto */ \nvar _s = $RefreshSig$();\n\n\nfunction HandleSignMessage() {\n    _s();\n    const { publicKey, signMessage } = (0,_solana_wallet_adapter_react__WEBPACK_IMPORTED_MODULE_2__.useWallet)();\n    async function getNonce() {\n        if (!publicKey) {\n            console.log(publicKey);\n            return;\n        }\n        if (!signMessage) {\n            alert(\"Wallet does not support message signing!\");\n            return;\n        }\n        const nonceRes = await fetch(\"http://localhost:4000/api/auth/nonce\");\n        const { nonce } = await nonceRes.json();\n        const message = \"Please sign this message to verify ownership.\\nNonce: \".concat(nonce);\n        const encodedMessage = new TextEncoder().encode(message);\n        const signedMessage = await signMessage(encodedMessage);\n        const verifyRes = await fetch(\"http://localhost:4000/api/auth/verify\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                wallet: publicKey.toString(),\n                signature: bs58__WEBPACK_IMPORTED_MODULE_1__[\"default\"].encode(signedMessage),\n                nonce\n            }),\n            credentials: \"include\"\n        });\n        const data = await verifyRes.json();\n        if (data.success) {\n            console.log(\"✅ Authenticated!\");\n        } else {\n            console.error(\"❌ Verification failed\");\n        }\n    }\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n            className: \"bg-blue-600 p-2\",\n            onClick: getNonce,\n            children: \"Sign message\"\n        }, void 0, false, {\n            fileName: \"G:\\\\Carbon-project\\\\client\\\\app\\\\auth\\\\signin\\\\handleSignMessage.tsx\",\n            lineNumber: 46,\n            columnNumber: 7\n        }, this)\n    }, void 0, false, {\n        fileName: \"G:\\\\Carbon-project\\\\client\\\\app\\\\auth\\\\signin\\\\handleSignMessage.tsx\",\n        lineNumber: 45,\n        columnNumber: 5\n    }, this);\n}\n_s(HandleSignMessage, \"57XPIIids24v9KL0JyqJVkFDr3k=\", false, function() {\n    return [\n        _solana_wallet_adapter_react__WEBPACK_IMPORTED_MODULE_2__.useWallet\n    ];\n});\n_c = HandleSignMessage;\nvar _c;\n$RefreshReg$(_c, \"HandleSignMessage\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2FwcC9hdXRoL3NpZ25pbi9oYW5kbGVTaWduTWVzc2FnZS50c3giLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQ3dFO0FBQ2hEO0FBRWpCLFNBQVNFOztJQUNkLE1BQU0sRUFBRUMsU0FBUyxFQUFFQyxXQUFXLEVBQUUsR0FBR0osdUVBQVNBO0lBRzVDLGVBQWVLO1FBRWIsSUFBSSxDQUFDRixXQUFXO1lBQ2RHLFFBQVFDLEdBQUcsQ0FBQ0o7WUFDWjtRQUNGO1FBQ0EsSUFBSSxDQUFDQyxhQUFhO1lBQ2hCSSxNQUFNO1lBQ047UUFDRjtRQUNBLE1BQU1DLFdBQVcsTUFBTUMsTUFBTTtRQUM3QixNQUFNLEVBQUVDLEtBQUssRUFBRSxHQUFHLE1BQU1GLFNBQVNHLElBQUk7UUFFckMsTUFBTUMsVUFBVSx5REFBK0QsT0FBTkY7UUFDekUsTUFBTUcsaUJBQWlCLElBQUlDLGNBQWNDLE1BQU0sQ0FBQ0g7UUFDaEQsTUFBTUksZ0JBQWdCLE1BQU1iLFlBQVlVO1FBRXhDLE1BQU1JLFlBQVksTUFBTVIsTUFBTSx5Q0FBeUM7WUFDckVTLFFBQVE7WUFDUkMsU0FBUztnQkFBRSxnQkFBZ0I7WUFBbUI7WUFDOUNDLE1BQU1DLEtBQUtDLFNBQVMsQ0FBQztnQkFDbkJDLFFBQVFyQixVQUFVc0IsUUFBUTtnQkFDMUJDLFdBQVd6Qiw0Q0FBSUEsQ0FBQ2UsTUFBTSxDQUFDQztnQkFDdkJOO1lBQ0Y7WUFDQWdCLGFBQWE7UUFDZjtRQUNBLE1BQU1DLE9BQU8sTUFBTVYsVUFBVU4sSUFBSTtRQUNqQyxJQUFJZ0IsS0FBS0MsT0FBTyxFQUFFO1lBQ2hCdkIsUUFBUUMsR0FBRyxDQUFDO1FBQ2QsT0FBTztZQUNMRCxRQUFRd0IsS0FBSyxDQUFDO1FBQ2hCO0lBQ0Y7SUFFQSxxQkFDRSw4REFBQ0M7a0JBQ0MsNEVBQUNDO1lBQU9DLFdBQVU7WUFBa0JDLFNBQVM3QjtzQkFBVTs7Ozs7Ozs7Ozs7QUFLN0Q7R0E5Q2dCSDs7UUFDcUJGLG1FQUFTQTs7O0tBRDlCRSIsInNvdXJjZXMiOlsiRzpcXENhcmJvbi1wcm9qZWN0XFxjbGllbnRcXGFwcFxcYXV0aFxcc2lnbmluXFxoYW5kbGVTaWduTWVzc2FnZS50c3giXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2UgY2xpZW50XCI7XHJcbmltcG9ydCB7IHVzZUNvbm5lY3Rpb24sIHVzZVdhbGxldCB9IGZyb20gXCJAc29sYW5hL3dhbGxldC1hZGFwdGVyLXJlYWN0XCI7XHJcbmltcG9ydCBiczU4IGZyb20gXCJiczU4XCI7XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gSGFuZGxlU2lnbk1lc3NhZ2UoKSB7XHJcbiAgY29uc3QgeyBwdWJsaWNLZXksIHNpZ25NZXNzYWdlIH0gPSB1c2VXYWxsZXQoKTtcclxuICBcclxuXHJcbiAgYXN5bmMgZnVuY3Rpb24gZ2V0Tm9uY2UoKSB7XHJcbiAgICBcclxuICAgIGlmICghcHVibGljS2V5KSB7XHJcbiAgICAgIGNvbnNvbGUubG9nKHB1YmxpY0tleSlcclxuICAgICAgcmV0dXJuO1xyXG4gICAgfVxyXG4gICAgaWYgKCFzaWduTWVzc2FnZSkge1xyXG4gICAgICBhbGVydChcIldhbGxldCBkb2VzIG5vdCBzdXBwb3J0IG1lc3NhZ2Ugc2lnbmluZyFcIik7XHJcbiAgICAgIHJldHVybjtcclxuICAgIH1cclxuICAgIGNvbnN0IG5vbmNlUmVzID0gYXdhaXQgZmV0Y2goXCJodHRwOi8vbG9jYWxob3N0OjQwMDAvYXBpL2F1dGgvbm9uY2VcIik7XHJcbiAgICBjb25zdCB7IG5vbmNlIH0gPSBhd2FpdCBub25jZVJlcy5qc29uKCk7XHJcblxyXG4gICAgY29uc3QgbWVzc2FnZSA9IGBQbGVhc2Ugc2lnbiB0aGlzIG1lc3NhZ2UgdG8gdmVyaWZ5IG93bmVyc2hpcC5cXG5Ob25jZTogJHtub25jZX1gO1xyXG4gICAgY29uc3QgZW5jb2RlZE1lc3NhZ2UgPSBuZXcgVGV4dEVuY29kZXIoKS5lbmNvZGUobWVzc2FnZSk7XHJcbiAgICBjb25zdCBzaWduZWRNZXNzYWdlID0gYXdhaXQgc2lnbk1lc3NhZ2UoZW5jb2RlZE1lc3NhZ2UpO1xyXG5cclxuICAgIGNvbnN0IHZlcmlmeVJlcyA9IGF3YWl0IGZldGNoKFwiaHR0cDovL2xvY2FsaG9zdDo0MDAwL2FwaS9hdXRoL3ZlcmlmeVwiLCB7XHJcbiAgICAgIG1ldGhvZDogXCJQT1NUXCIsXHJcbiAgICAgIGhlYWRlcnM6IHsgXCJDb250ZW50LVR5cGVcIjogXCJhcHBsaWNhdGlvbi9qc29uXCIgfSxcclxuICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoe1xyXG4gICAgICAgIHdhbGxldDogcHVibGljS2V5LnRvU3RyaW5nKCksXHJcbiAgICAgICAgc2lnbmF0dXJlOiBiczU4LmVuY29kZShzaWduZWRNZXNzYWdlKSxcclxuICAgICAgICBub25jZSxcclxuICAgICAgfSksXHJcbiAgICAgIGNyZWRlbnRpYWxzOiBcImluY2x1ZGVcIixcclxuICAgIH0pO1xyXG4gICAgY29uc3QgZGF0YSA9IGF3YWl0IHZlcmlmeVJlcy5qc29uKCk7XHJcbiAgICBpZiAoZGF0YS5zdWNjZXNzKSB7XHJcbiAgICAgIGNvbnNvbGUubG9nKFwi4pyFIEF1dGhlbnRpY2F0ZWQhXCIpO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgY29uc29sZS5lcnJvcihcIuKdjCBWZXJpZmljYXRpb24gZmFpbGVkXCIpO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgcmV0dXJuIChcclxuICAgIDxkaXY+XHJcbiAgICAgIDxidXR0b24gY2xhc3NOYW1lPVwiYmctYmx1ZS02MDAgcC0yXCIgb25DbGljaz17Z2V0Tm9uY2V9PlxyXG4gICAgICAgIFNpZ24gbWVzc2FnZVxyXG4gICAgICA8L2J1dHRvbj5cclxuICAgIDwvZGl2PiAgXHJcbiAgKTtcclxufVxyXG4iXSwibmFtZXMiOlsidXNlV2FsbGV0IiwiYnM1OCIsIkhhbmRsZVNpZ25NZXNzYWdlIiwicHVibGljS2V5Iiwic2lnbk1lc3NhZ2UiLCJnZXROb25jZSIsImNvbnNvbGUiLCJsb2ciLCJhbGVydCIsIm5vbmNlUmVzIiwiZmV0Y2giLCJub25jZSIsImpzb24iLCJtZXNzYWdlIiwiZW5jb2RlZE1lc3NhZ2UiLCJUZXh0RW5jb2RlciIsImVuY29kZSIsInNpZ25lZE1lc3NhZ2UiLCJ2ZXJpZnlSZXMiLCJtZXRob2QiLCJoZWFkZXJzIiwiYm9keSIsIkpTT04iLCJzdHJpbmdpZnkiLCJ3YWxsZXQiLCJ0b1N0cmluZyIsInNpZ25hdHVyZSIsImNyZWRlbnRpYWxzIiwiZGF0YSIsInN1Y2Nlc3MiLCJlcnJvciIsImRpdiIsImJ1dHRvbiIsImNsYXNzTmFtZSIsIm9uQ2xpY2siXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/auth/signin/handleSignMessage.tsx\n"));

/***/ })

});